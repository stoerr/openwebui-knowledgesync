#!/usr/bin/env node

/* Prints usage: commands are listkb, listfiles */
function usage() {
    console.log('Usage: open-webui-knowledgesync [command]');
    console.log('Commands:');
    console.log('  sync         Performs the synchronization of the configured knowledge base with the current directory.');
    console.log('               All files in the knowledge base that do not correspond to files in the current directory will be deleted.');
    console.log('               All files in the current directory will be uploaded / changed if needed.');
    console.log('  listkb       List knowledge bases');
    console.log('  listfiles    List all files');
    console.log('  listkbfiles  List files in a knowledge base');
}

const fs = require('fs');
const path = require('path');

const args = process.argv.slice(2);
if (args.length === 0) {
    usage();
    process.exit(1);
}
const command = args[0];

const configPath = path.join(__dirname, '.open-webui-knowledgesync');
if (!fs.existsSync(configPath)) {
    console.error('Configuration file not found:', configPath);
    process.exit(1);
}
const config = fs.readFileSync(configPath, 'utf8').trim().split('\n').reduce((acc, line) => {
    const [key, value] = line.split('=');
    acc[key.trim()] = value.trim();
    return acc;
}, {});

if (!config.open_webui_api_key) {
    console.error('Missing required configuration: knowledge_base_id or open_webui_api_key');
    process.exit(1);
}

const knowledgeBaseId = config.knowledge_base_id;
const openWebuiApiKey = config.open_webui_api_key;
const openWebuiApiUrl = config.open_webui_api_url || 'http://localhost:3000';

// call functions based on command
if (command === 'sync') {
    if (!knowledgeBaseId) {
        console.error('Knowledge base ID is required for sync command.');
        process.exit(1);
    }
    syncKnowledgeBase();
} else if (command === 'listkb') {
    listKnowledgeBases();
} else if (command === 'listfiles') {
    listFiles();
} else if (command === 'listkbfiles') {
    if (!knowledgeBaseId) {
        console.error('Knowledge base ID is required for this command.');
        process.exit(1);
    }
    listFilesInKnowledgeBase(knowledgeBaseId);
} else {
    usage();
    process.exit(1);
}

function listKnowledgeBases() {
  httpGet('/api/v1/knowledge/');
}

function listFiles() {
  httpGet('/api/v1/files/');
}

function listFilesInKnowledgeBase(id) {
  httpGet(`/api/v1/knowledge/${id}`);
}

function httpGet(path) {
  const { URL } = require('url');
  const url = new URL(path, openWebuiApiUrl);
  const lib = url.protocol === 'https:' ? require('https') : require('http');
  const options = {
    hostname: url.hostname,
    port:     url.port,
    path:     url.pathname + url.search,
    method:   'GET',
    headers: {
      'Authorization': `Bearer ${openWebuiApiKey}`,
      'Accept':        'application/json'
    }
  };

  const req = lib.request(options, res => {
    let data = '';
    res.on('data', chunk => data += chunk);
    res.on('end', () => {
      try {
        const json = JSON.parse(data);
        console.log(JSON.stringify(json, null, 2));
      } catch (err) {
        console.error('Invalid JSON response:', err.message);
        console.log(data);
      }
    });
  });

  req.on('error', err => {
    console.error('Request error:', err.message);
  });

  req.end();
}

function syncKnowledgeBase() {
    // TODO
}